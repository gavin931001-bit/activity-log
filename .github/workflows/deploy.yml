name: CI/CD Deployment Pipeline

on:
  push:
    branches: [ master ]
  workflow_dispatch:
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies and build
        run: |
          npm install
          npx ncc build src/index.js --license licenses.txt
          zip -r build.zip dist

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Staging Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          # 如果 release 存在就刪掉
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG exists. Deleting..."
            gh release delete "$TAG" -y
          fi

          # 建立 release
          gh release create "$TAG" build.zip --notes "${NOTE:-Testing pre-production release}"

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production  # 需 reviewers 批准
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Production Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          # 如果 release 存在就刪掉
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG exists. Deleting..."
            gh release delete "$TAG" -y
          fi

          # 建立 release
          gh release create "$TAG" build.zip --notes "${NOTE:-Final production release}"

