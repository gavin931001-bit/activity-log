name: CI Dev Deployment

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Create artifact
        run: zip -r build.zip ./
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-${{ github.run_number }}
          path: build.zip
          retention-days: 7

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact-${{ github.run_number }}
      
      - name: Delete existing release if exists
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="dev-${{ github.run_number }}"
          gh release delete "$TAG" --yes || true
          git push origin :refs/tags/"$TAG" || true
      
      - name: Create Dev Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="dev-${{ github.run_number }}"
          RELEASE_NOTE="${{ vars.RELEASE_NOTE || 'Dev automatic release' }}"
          
          gh release create "$TAG" build.zip \
            --title "Dev Release #${{ github.run_number }}" \
            --notes "$RELEASE_NOTE" \
            --prerelease
          
          echo "âœ… Release $TAG created successfully"